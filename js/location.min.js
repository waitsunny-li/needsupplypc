"use strict";var _createClass=function(){function n(t,e){for(var o=0;o<e.length;o++){var n=e[o];n.enumerable=n.enumerable||false;n.configurable=true;if("value"in n)n.writable=true;Object.defineProperty(t,n.key,n)}}return function(t,e,o){if(e)n(t.prototype,e);if(o)n(t,o);return t}}();function _classCallCheck(t,e){if(!(t instanceof e)){throw new TypeError("Cannot call a class as a function")}}var MyLocation=function(){function e(t){_classCallCheck(this,e);this.keyid=t?t:"NU6BZ-RGSWD-PSV4K-HTQI6-XI4IT-KGFUJ";this.options={timeout:8e3}}_createClass(e,[{key:"init",value:function t(e,o){var n=this;var a=new qq.maps.Geolocation(n.keyid,"myapp");a.getLocation(e,o,n.options)}},{key:"getLoaction",value:function t(o){var e=this.keyid;$.ajax({url:"https://apis.map.qq.com/ws/location/v1/ip?output=jsonp&key="+e,dataType:"jsonp",type:"get",success:function t(e){o(e)},error:function t(e){console.log(e)}})}},{key:"latLngTransAddress",value:function t(e,o){var n=e.lat,a=e.lng,i=e.get_poi;var s=this.keyid;var c=i?i:0;$.ajax({url:"https://apis.map.qq.com/ws/geocoder/v1/?output=jsonp&location="+n+","+a+"&key="+s+"&get_poi="+c,dataType:"jsonp",jsonp:"callback",jsonpCallback:"getLocat",type:"get",success:function t(e){o(e)},error:function t(e){console.log(e)}})}}]);return e}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvY2F0aW9uLmpzIl0sIm5hbWVzIjpbIl9jcmVhdGVDbGFzcyIsImRlZmluZVByb3BlcnRpZXMiLCJ0YXJnZXQiLCJwcm9wcyIsImkiLCJsZW5ndGgiLCJkZXNjcmlwdG9yIiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJrZXkiLCJDb25zdHJ1Y3RvciIsInByb3RvUHJvcHMiLCJzdGF0aWNQcm9wcyIsInByb3RvdHlwZSIsIl9jbGFzc0NhbGxDaGVjayIsImluc3RhbmNlIiwiVHlwZUVycm9yIiwiTXlMb2NhdGlvbiIsImtleWlkIiwidGhpcyIsIm9wdGlvbnMiLCJ0aW1lb3V0IiwidmFsdWUiLCJpbml0Iiwic3VjY2VzcyIsImVycm9yIiwic2VsZiIsImdldG15bG9jYXRpb24iLCJxcSIsIm1hcHMiLCJHZW9sb2NhdGlvbiIsImdldExvY2F0aW9uIiwiZ2V0TG9hY3Rpb24iLCJjYiIsIiQiLCJhamF4IiwidXJsIiwiZGF0YVR5cGUiLCJ0eXBlIiwicmVzIiwiX2Vycm9yIiwiY29uc29sZSIsImxvZyIsImxhdExuZ1RyYW5zQWRkcmVzcyIsIl9yZWYiLCJsYXQiLCJsbmciLCJnZXRfcG9pIiwiZ2V0X3BvaV9pZCIsImpzb25wIiwianNvbnBDYWxsYmFjayIsIl9lcnJvcjIiXSwibWFwcGluZ3MiOiJBQUFBLGFBRUEsSUFBSUEsYUFBZSxXQUFjLFNBQVNDLEVBQWlCQyxFQUFRQyxHQUFTLElBQUssSUFBSUMsRUFBSSxFQUFHQSxFQUFJRCxFQUFNRSxPQUFRRCxJQUFLLENBQUUsSUFBSUUsRUFBYUgsRUFBTUMsR0FBSUUsRUFBV0MsV0FBYUQsRUFBV0MsWUFBYyxNQUFPRCxFQUFXRSxhQUFlLEtBQU0sR0FBSSxVQUFXRixFQUFZQSxFQUFXRyxTQUFXLEtBQU1DLE9BQU9DLGVBQWVULEVBQVFJLEVBQVdNLElBQUtOLElBQWlCLE9BQU8sU0FBVU8sRUFBYUMsRUFBWUMsR0FBZSxHQUFJRCxFQUFZYixFQUFpQlksRUFBWUcsVUFBV0YsR0FBYSxHQUFJQyxFQUFhZCxFQUFpQlksRUFBYUUsR0FBYyxPQUFPRixHQUE3Z0IsR0FFbkIsU0FBU0ksZ0JBQWdCQyxFQUFVTCxHQUFlLEtBQU1LLGFBQW9CTCxHQUFjLENBQUUsTUFBTSxJQUFJTSxVQUFVLHNDQU1oSCxJQUFJQyxXQUFhLFdBQ2YsU0FBU0EsRUFBV0MsR0FDbEJKLGdCQUFnQkssS0FBTUYsR0FFdEJFLEtBQUtELE1BQVFBLEVBQVFBLEVBQVEsc0NBRTdCQyxLQUFLQyxRQUFVLENBQ2JDLFFBQVMsS0FJYnhCLGFBQWFvQixFQUFZLENBQUMsQ0FDeEJSLElBQUssT0FDTGEsTUFBTyxTQUFTQyxFQUFLQyxFQUFTQyxHQUM1QixJQUFJQyxFQUFPUCxLQUNYLElBQUlRLEVBQWdCLElBQUlDLEdBQUdDLEtBQUtDLFlBQVlKLEVBQUtSLE1BQU8sU0FFeERTLEVBQWNJLFlBQVlQLEVBQVNDLEVBQU9DLEVBQUtOLFdBS2hELENBQ0RYLElBQUssY0FDTGEsTUFBTyxTQUFTVSxFQUFZQyxHQUMxQixJQUFJeEIsRUFBTVUsS0FBS0QsTUFDZmdCLEVBQUVDLEtBQUssQ0FDTEMsSUFBSyw4REFBZ0UzQixFQUNyRTRCLFNBQVUsUUFHVkMsS0FBTSxNQUNOZCxRQUFTLFNBQVNBLEVBQVFlLEdBQ3hCTixFQUFHTSxJQUVMZCxNQUFPLFNBQVNBLEVBQU1lLEdBQ3BCQyxRQUFRQyxJQUFJRixRQU9qQixDQUNEL0IsSUFBSyxxQkFDTGEsTUFBTyxTQUFTcUIsRUFBbUJDLEVBQU1YLEdBQ3ZDLElBQUlZLEVBQU1ELEVBQUtDLElBQ1hDLEVBQU1GLEVBQUtFLElBQ1hDLEVBQVVILEVBQUtHLFFBRW5CLElBQUl0QyxFQUFNVSxLQUFLRCxNQUNmLElBQUk4QixFQUFhRCxFQUFVQSxFQUFVLEVBQ3JDYixFQUFFQyxLQUFLLENBQ0xDLElBQUssaUVBQW1FUyxFQUFNLElBQU1DLEVBQU0sUUFBVXJDLEVBQU0sWUFBY3VDLEVBQ3hIWCxTQUFVLFFBQ1ZZLE1BQU8sV0FDUEMsY0FBZSxXQUNmWixLQUFNLE1BQ05kLFFBQVMsU0FBU0EsRUFBUWUsR0FDeEJOLEVBQUdNLElBRUxkLE1BQU8sU0FBU0EsRUFBTTBCLEdBQ3BCVixRQUFRQyxJQUFJUyxVQU1wQixPQUFPbEMsRUFwRVEiLCJmaWxlIjoibG9jYXRpb24ubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbi8qXHJcbiAqIEBBdXRob3I6IGxpd2VpbG9uZ1xyXG4gKiBARGF0ZTogMjAyMC0xMC0yMSAxNzozNzoxMFxyXG4gKi9cbnZhciBNeUxvY2F0aW9uID0gZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBNeUxvY2F0aW9uKGtleWlkKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIE15TG9jYXRpb24pO1xuXG4gICAgdGhpcy5rZXlpZCA9IGtleWlkID8ga2V5aWQgOiAnTlU2QlotUkdTV0QtUFNWNEstSFRRSTYtWEk0SVQtS0dGVUonO1xuXG4gICAgdGhpcy5vcHRpb25zID0ge1xuICAgICAgdGltZW91dDogODAwMFxuICAgIH07XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoTXlMb2NhdGlvbiwgW3tcbiAgICBrZXk6IFwiaW5pdFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBpbml0KHN1Y2Nlc3MsIGVycm9yKSB7XG4gICAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgICB2YXIgZ2V0bXlsb2NhdGlvbiA9IG5ldyBxcS5tYXBzLkdlb2xvY2F0aW9uKHNlbGYua2V5aWQsIFwibXlhcHBcIik7XG4gICAgICAvL+iOt+WPluS9jee9ruS/oeaBr1xuICAgICAgZ2V0bXlsb2NhdGlvbi5nZXRMb2NhdGlvbihzdWNjZXNzLCBlcnJvciwgc2VsZi5vcHRpb25zKTtcbiAgICB9XG5cbiAgICAvLyDpgJrov4dpcOWcsOWdgOadpeiOt+WPluS9jee9ru+8jOmAguWQiHBj56uvXG5cbiAgfSwge1xuICAgIGtleTogXCJnZXRMb2FjdGlvblwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRMb2FjdGlvbihjYikge1xuICAgICAgdmFyIGtleSA9IHRoaXMua2V5aWQ7XG4gICAgICAkLmFqYXgoe1xuICAgICAgICB1cmw6IFwiaHR0cHM6Ly9hcGlzLm1hcC5xcS5jb20vd3MvbG9jYXRpb24vdjEvaXA/b3V0cHV0PWpzb25wJmtleT1cIiArIGtleSxcbiAgICAgICAgZGF0YVR5cGU6IFwianNvbnBcIixcbiAgICAgICAgLy8ganNvbnA6IFwiY2FsbGJhY2tcIixcbiAgICAgICAgLy8ganNvbnBDYWxsYmFjazogJ2dldExvY2F0JyxcbiAgICAgICAgdHlwZTogJ2dldCcsXG4gICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIHN1Y2Nlc3MocmVzKSB7XG4gICAgICAgICAgY2IocmVzKTtcbiAgICAgICAgfSxcbiAgICAgICAgZXJyb3I6IGZ1bmN0aW9uIGVycm9yKF9lcnJvcikge1xuICAgICAgICAgIGNvbnNvbGUubG9nKF9lcnJvcik7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIC8vIOmAmui/h+e7j+e6rOW6pui9rOWMluS4uuivpue7huWcsOWdgFxuXG4gIH0sIHtcbiAgICBrZXk6IFwibGF0TG5nVHJhbnNBZGRyZXNzXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGxhdExuZ1RyYW5zQWRkcmVzcyhfcmVmLCBjYikge1xuICAgICAgdmFyIGxhdCA9IF9yZWYubGF0LFxuICAgICAgICAgIGxuZyA9IF9yZWYubG5nLFxuICAgICAgICAgIGdldF9wb2kgPSBfcmVmLmdldF9wb2k7XG5cbiAgICAgIHZhciBrZXkgPSB0aGlzLmtleWlkO1xuICAgICAgdmFyIGdldF9wb2lfaWQgPSBnZXRfcG9pID8gZ2V0X3BvaSA6IDA7XG4gICAgICAkLmFqYXgoe1xuICAgICAgICB1cmw6IFwiaHR0cHM6Ly9hcGlzLm1hcC5xcS5jb20vd3MvZ2VvY29kZXIvdjEvP291dHB1dD1qc29ucCZsb2NhdGlvbj1cIiArIGxhdCArIFwiLFwiICsgbG5nICsgXCIma2V5PVwiICsga2V5ICsgXCImZ2V0X3BvaT1cIiArIGdldF9wb2lfaWQsXG4gICAgICAgIGRhdGFUeXBlOiBcImpzb25wXCIsXG4gICAgICAgIGpzb25wOiBcImNhbGxiYWNrXCIsXG4gICAgICAgIGpzb25wQ2FsbGJhY2s6ICdnZXRMb2NhdCcsXG4gICAgICAgIHR5cGU6ICdnZXQnLFxuICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiBzdWNjZXNzKHJlcykge1xuICAgICAgICAgIGNiKHJlcyk7XG4gICAgICAgIH0sXG4gICAgICAgIGVycm9yOiBmdW5jdGlvbiBlcnJvcihfZXJyb3IyKSB7XG4gICAgICAgICAgY29uc29sZS5sb2coX2Vycm9yMik7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBNeUxvY2F0aW9uO1xufSgpOyJdfQ==
